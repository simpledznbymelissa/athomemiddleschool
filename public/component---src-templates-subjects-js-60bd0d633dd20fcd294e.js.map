{"version":3,"sources":["webpack:///./src/templates/subjects.js"],"names":["ConditionalWrapper","condition","wrapper","children","ArticleIndex","data","pageContext","posts","allMarkdownRemark","edges","subject","console","log","pageHeader","title","description","image","pathname","className","style","articlelist","map","index","node","key","listitem","frontmatter","featimg","to","fields","slug","fixed","childImageSharp","alt","article__wrap","article__title","article__meta","author","Date","date","toLocaleDateString","month","day","year","article__tax","article__content","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"2OAWMA,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,SAAvB,OACzBF,EAAYC,EAAQC,GAAYA,GAiFnBC,UA/EM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtBC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAAYJ,EAAZI,QACRC,QAAQC,IAAIN,GAEZ,IAAIO,EAAU,WAKd,OAJIH,IACFG,EAAU,eAAkBH,EAAlB,KAIV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,MAAK,gCAAkCJ,EAAlC,IACLK,YAAY,yCACZC,MAAM,YACNC,SAAQ,aAAeP,IAIzB,6BAASQ,UAAWC,IAAMC,aACxB,4BAAKP,GACL,4BACGN,EAAMc,KAAI,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACT,wBAAIC,IAAKF,EAAOJ,UAAWC,IAAMM,UAC9BF,EAAKG,YAAYC,SAChB,4BAAQT,UAAWC,IAAMQ,SACvB,kBAAC,OAAD,CAAMC,GAAIL,EAAKM,OAAOC,MACpB,kBAAC,IAAD,CACEC,MAAOR,EAAKG,YAAYC,QAAQK,gBAAgBD,MAChDE,IAAKV,EAAKG,YAAYZ,UAK9B,kBAACd,EAAD,CAEEC,UAAWsB,EAAKG,YAAYC,QAC5BzB,QAAS,SAAAC,GAAQ,OACf,yBAAKe,UAAWC,IAAMe,eAAgB/B,KAGxC,kBAAC,OAAD,CAAMyB,GAAIL,EAAKM,OAAOC,MACpB,wBAAIZ,UAAWC,IAAMgB,gBAClBZ,EAAKG,YAAYZ,QAItB,yBAAKI,UAAWC,IAAMiB,eAAtB,MACMb,EAAKG,YAAYW,OADvB,cAC0C,IACvC,IAAIC,KAAKf,EAAKG,YAAYa,MAAMC,mBAAmB,QAAS,CAC3DC,MAAO,OACPC,IAAK,UACLC,KAAM,YACJ,KAEN,yBAAKzB,UAAWC,IAAMyB,cAAtB,eACe,IACZrB,EAAKG,YAAYhB,QAAQW,KAAI,SAACX,EAASY,GAAV,MAAoB,CAChDA,EAAQ,GAAK,KACb,kBAAC,OAAD,CAAME,IAAKF,EAAOM,GAAE,aAAe,IAAYlB,IAC5CA,QAIP,yBACEQ,UAAWC,IAAM0B,iBACjBC,wBAAyB,CAAEC,OAAQxB,EAAKyB,kBAOpD,kBAAC,IAAD,CAAY1C,YAAaA","file":"component---src-templates-subjects-js-60bd0d633dd20fcd294e.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport _ from \"lodash\"\r\n\r\nimport style from \"./articles.module.css\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Pagination from \"../components/pagination\"\r\n\r\n// Component to place a conditional wrapper around content.\r\nconst ConditionalWrapper = ({ condition, wrapper, children }) =>\r\n  condition ? wrapper(children) : children\r\n\r\nconst ArticleIndex = ({ data, pageContext }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  const { subject } = pageContext\r\n  console.log(pageContext)\r\n\r\n  let pageHeader = `Articles`\r\n  if (subject) {\r\n    pageHeader = `Filed under ${subject}:`\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={`All articles on the subject \"${subject}\"`}\r\n        description=\"All articles filed under this subject.\"\r\n        image=\"/logo.png\"\r\n        pathname={`/subjects/${subject}`}\r\n        // Boolean indicating whether this is an article:\r\n        // article\r\n      />\r\n      <section className={style.articlelist}>\r\n        <h2>{pageHeader}</h2>\r\n        <ul>\r\n          {posts.map(({ node }, index) => (\r\n            <li key={index} className={style.listitem}>\r\n              {node.frontmatter.featimg && (\r\n                <figure className={style.featimg}>\r\n                  <Link to={node.fields.slug}>\r\n                    <Img\r\n                      fixed={node.frontmatter.featimg.childImageSharp.fixed}\r\n                      alt={node.frontmatter.title}\r\n                    />\r\n                  </Link>\r\n                </figure>\r\n              )}\r\n              <ConditionalWrapper\r\n                // If featured image, wrap content in <div>.\r\n                condition={node.frontmatter.featimg}\r\n                wrapper={children => (\r\n                  <div className={style.article__wrap}>{children}</div>\r\n                )}\r\n              >\r\n                <Link to={node.fields.slug}>\r\n                  <h1 className={style.article__title}>\r\n                    {node.frontmatter.title}\r\n                  </h1>\r\n                </Link>\r\n\r\n                <div className={style.article__meta}>\r\n                  by {node.frontmatter.author}. Published{\" \"}\r\n                  {new Date(node.frontmatter.date).toLocaleDateString(\"en-US\", {\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                    year: \"numeric\",\r\n                  })}{\" \"}\r\n                </div>\r\n                <div className={style.article__tax}>\r\n                  Filed under:{\" \"}\r\n                  {node.frontmatter.subject.map((subject, index) => [\r\n                    index > 0 && \", \",\r\n                    <Link key={index} to={`/subjects/${_.kebabCase(subject)}`}>\r\n                      {subject}\r\n                    </Link>,\r\n                  ])}\r\n                </div>\r\n                <div\r\n                  className={style.article__content}\r\n                  dangerouslySetInnerHTML={{ __html: node.excerpt }}\r\n                />\r\n              </ConditionalWrapper>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n      <Pagination pageContext={pageContext} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ArticleIndex\r\n\r\nexport const query = graphql`\r\n  query($subject: String!, $skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      filter: { frontmatter: { subject: { in: [$subject] } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      skip: $skip\r\n      limit: $limit\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          id\r\n          frontmatter {\r\n            title\r\n            date\r\n            subject\r\n            author\r\n            featimg {\r\n              childImageSharp {\r\n                fixed(width: 400, height: 400, cropFocus: ATTENTION) {\r\n                  ...GatsbyImageSharpFixed\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}