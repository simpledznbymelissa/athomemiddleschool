{"version":3,"sources":["webpack:///./src/components/modal.js","webpack:///./src/components/mathPuzzle.js","webpack:///./src/components/checkbox.js","webpack:///./src/components/video.js"],"names":["Modal","onClose","e","props","render","this","show","id","className","children","React","Component","puzzleButton","backgroundColor","padding","width","fontSize","color","margin","borderRadius","border","solution","MathPuzzle","state","showModal","setState","style","type","onClick","ToggleSwitch","checked","label","disabled","ariaInvalid","ariaLabelledby","onChange","htmlFor","aria-invalid","aria-labelledby","Video","videoUrl","offset","src","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen"],"mappings":"oIAGqBA,E,oJACnBC,QAAU,SAAAC,GACR,EAAKC,MAAMF,SAAW,EAAKE,MAAMF,QAAQC,I,sCAE3CE,OAAA,WACE,OAAKC,KAAKF,MAAMG,KAId,yBAAKC,GAAG,SAEN,yBAAKC,UAAU,WAAWH,KAAKF,MAAMM,UACrC,yBAAKD,UAAU,aANV,M,GANsBE,IAAMC,WCAnCC,EAAe,CACnBC,gBAAiB,UACnBC,QAAS,UACTC,MAAO,MACPC,SAAU,OACVC,MAAO,OACPC,OAAQ,SACRC,aAAc,SACdC,OAAQ,kBAGFC,EAAW,CACfJ,MAAO,UACPH,QAAS,aAILQ,E,oJACJC,MAAQ,CACNjB,MAAM,G,EAERkB,UAAY,SAAAtB,GACV,EAAKuB,SAAS,CACZnB,MAAO,EAAKiB,MAAMjB,Q,sCAGtBF,OAAA,WAAU,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAOH,QAASI,KAAKmB,UAAWlB,KAAMD,KAAKkB,MAAMjB,MAC/C,uBAAGoB,MAAOL,GAAWhB,KAAKF,MAAMkB,WAElC,4BAAQK,MAAOd,EACPe,KAAK,SACXnB,UAAU,gBACVD,GAAG,yBACHqB,QAAS,SAAA1B,GACP,EAAKsB,UAAUtB,KAGhB,IARH,cASc,O,GAxBGQ,IAAMC,WA+BhBW,O,kCCnDf,mCAoCeO,IAjCM,SAAC,GAQO,IAPLC,EAOI,EAPJA,QACAC,EAMI,EANJA,MACAxB,EAKI,EALJA,GACAyB,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACAC,EACI,EADJA,SAEtB,OACE,oCAEE,2BAAOC,QAAS7B,EAAIC,UAAU,kDAC3BuB,EACD,0BAAMvB,UAAU,iCACd,2BACEmB,KAAK,WACLG,QAASA,EACTvB,GAAIA,EACJC,UAAU,wBACVwB,SAAUA,EACVG,SAAUA,EACVE,eAAcJ,EACdK,kBAAiBJ,IAEnB,0BAAM1B,UAAU,mB,yHCJX+B,IApBD,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAyB,iBAExC,OACE,yBAAKhC,UAAU,gBACf,kBAAC,IAAD,CAAUA,UAAU,eAAeiC,OAAQ,KACrC,4BACEC,IAAKF,EACLG,MAAM,0EACNC,YAAY,IACZC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,KAGrB,uBAAGvC,UAAU","file":"56-f9656a3fa1f48690fa1a.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Modal extends React.Component {\r\n  onClose = e => {\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n  render() {\r\n    if (!this.props.show) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div id=\"modal\">\r\n        {/*<h2>Modal Window</h2>*/}\r\n        <div className=\"content\">{this.props.children}</div>\r\n        <div className=\"actions\">\r\n          {/*<button type=\"button\"  className=\"toggle-button\" onClick={this.onClose}>*/}\r\n            {/*close*/}\r\n          {/*</button>*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired\r\n};\r\n","import React from \"react\";\r\nimport Modal from \"./modal\";\r\n\r\nconst puzzleButton = {\r\n  backgroundColor: '#a6ddd9',\r\npadding: '.5rem 0',\r\nwidth: '9em',\r\nfontSize: '1rem',\r\ncolor: '#fff',\r\nmargin: '2rem 0',\r\nborderRadius: '0.25em',\r\nborder: '1px solid #fff'\r\n};\r\n\r\nconst solution = {\r\n  color: '#6aaca7',\r\n  padding: '1em 1em 0'\r\n};\r\n\r\n\r\nclass MathPuzzle extends React.Component {\r\n  state = {\r\n    show: false\r\n  };\r\n  showModal = e => {\r\n    this.setState({\r\n      show: !this.state.show\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal onClose={this.showModal} show={this.state.show}>\r\n          <p style={solution}>{this.props.solution}</p>\r\n        </Modal>\r\n        <button style={puzzleButton}\r\n                type=\"button\" \r\n          className=\"toggle-button\"\r\n          id=\"centered-toggle-button\"\r\n          onClick={e => {\r\n            this.showModal(e);\r\n          }}\r\n        >\r\n          {\" \"}\r\n          Show Answer{\" \"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MathPuzzle;\r\n","import React from \"react\"\r\nimport \"../styles/styles.css\"\r\n\r\nconst ToggleSwitch = ({\r\n                        checked,\r\n                        label,\r\n                        id,\r\n                        disabled,\r\n                        ariaInvalid,\r\n                        ariaLabelledby,\r\n                        onChange,\r\n                      }) => {\r\n  return (\r\n    <>\r\n\r\n      <label htmlFor={id} className=\"ToggleSwitch ToggleSwitch_label checkcontainer\">\r\n        {label}\r\n        <span className=\"ToggleSwitch_switch checkmark\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            id={id}\r\n            className=\"ToggleSwitch_checkbox\"\r\n            disabled={disabled}\r\n            onChange={onChange}\r\n            aria-invalid={ariaInvalid}\r\n            aria-labelledby={ariaLabelledby}\r\n          />\r\n          <span className=\"checkmark\" />\r\n        </span>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default ToggleSwitch\r\n","import React from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport '../styles/styles.css'\r\n\r\nconst Video = ({ videoUrl, ...props }) => {\r\n\r\n  return (\r\n    <div className=\"videoMargins\">\r\n    <LazyLoad className=\"videoWrapper\" offset={100}>\r\n          <iframe\r\n            src={videoUrl}\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            frameBorder=\"0\"\r\n            webkitallowfullscreen=\"true\"\r\n            mozallowfullscreen=\"true\"\r\n            allowFullScreen\r\n          />\r\n      </LazyLoad>\r\n      <p className=\"videoBottomMarg\"/>\r\n    </div>\r\n  )\r\n};\r\n// Example taken from https://github.com/twobin/react-lazyload\r\n\r\nexport default Video"],"sourceRoot":""}